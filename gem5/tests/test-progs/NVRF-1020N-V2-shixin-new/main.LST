C51 COMPILER V9.53.0.0   MAIN                                                              10/27/2016 11:00:08 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\ProgramFile\Keil_v5\C51\BIN\C51.EXE main.c LARGE OPTIMIZE(8,SPEED) DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include<reg51.h>
   2          
   3          sfr P3CTRL=0xb1;
   4          sbit TIP=P0^1;
   5          
   6          
   7          void main()
   8          {
   9   1      
  10   1      EA = 0;   // Set CPU status: interrupt disable
  11   1      P2 = 0xff;  // flag  
  12   1      
  13   1      //////      reset by wishbone    ////////
  14   1      P1 = 0x20;  //00100000
  15   1      P2 = 0xfe;    // flag
  16   1      P1 = 0x00;
  17   1      
  18   1      /////        I2C write            ///////
  19   1      
  20   1      //PRER set to 100kHz
  21   1      P1 = 0xD0;    //1101000,PRERlo
  22   1      P0 = 0x1F;    //PRERl0=1F
  23   1      P1 = 0x54;    //Read status
  24   1      P0 = 0x00;
  25   1      P1 = 0xD1;    //1101000,PRERhi
  26   1      
  27   1      //CTR, enable
  28   1      P1 = 0x54;
  29   1      P0 = 0x80;
  30   1      P1 = 0xD2;    //11010010,CTR  
  31   1      P3CTRL=0xC0;    //switch P3[7],P3[6] to i2c port
  32   1      
  33   1      //TXR: transfer slave adr
  34   1      P1 = 0x54;
  35   1      P0 = 0x20;
  36   1      P1 = 0xD3;    //11010011,TXR
  37   1      
  38   1      //CR:start, write
  39   1      P1 = 0x54;
  40   1      
  41   1      P0 = 0x90;
  42   1      P1 = 0xD4;    //11010100,CR
  43   1      
  44   1      //SR: wait tranfer over
  45   1      P1 = 0x54;
  46   1      P2 = 0x00;    //must insert nop, P0 change after 2 cyc of P1
  47   1      while(TIP);
  48   1      P2 = 0x7e;    // flag
  49   1      
  50   1      
  51   1      
  52   1      //TXR: tranfer slave mem adr
  53   1      P1 = 0x54;
  54   1      P0 = 0x01;
  55   1      P1 = 0xD3;    
C51 COMPILER V9.53.0.0   MAIN                                                              10/27/2016 11:00:08 PAGE 2   

  56   1      
  57   1      //CR: write
  58   1      P1 = 0x54;
  59   1      P0 = 0x10;
  60   1      P1 = 0xD4;    
  61   1      
  62   1      //SR: wait tranfer over
  63   1      P1 = 0x54;
  64   1      P2 = 0x00;
  65   1      while(TIP);
  66   1      P2 = 0xfe;      // flag
  67   1      
  68   1      
  69   1      
  70   1      //TXR: tranfer slave data
  71   1      P1 = 0x54;
  72   1      P0 = 0x11;
  73   1      P1 = 0xD3;    
  74   1      
  75   1      //CR, write
  76   1      P1 = 0x54;
  77   1      P0 = 0x10;
  78   1      P1 = 0xD4;    
  79   1      
  80   1      //SR: wait tranfer over
  81   1      P1 = 0x54;
  82   1      P2 = 0x00;
  83   1      while(TIP);
  84   1      P2 = 0x7e;    // flag
  85   1      
  86   1      
  87   1      
  88   1      //TXR:tranfer slave data(adr inc)
  89   1      P1 = 0x54;
  90   1      P0 = 0x22;
  91   1      P1 = 0xD3;    
  92   1      
  93   1      //CR: write
  94   1      P1 = 0x54;
  95   1      P0 = 0x10;
  96   1      
  97   1      P1 = 0xD4;    
  98   1      
  99   1      //SR: wait tranfer over
 100   1      P1 = 0x54;
 101   1      P2 = 0x00;
 102   1      while(TIP);
 103   1      P2 = 0xfe;      // flag
 104   1      
 105   1      
 106   1      
 107   1      //TXR: transfer slave data
 108   1      P1 = 0x54;
 109   1      P0 = 0x33;
 110   1      P1 = 0xD3;    
 111   1      
 112   1      //CR: stop, write
 113   1      P1 = 0x54;
 114   1      P0 = 0x50;
 115   1      P1 = 0xD4;    
 116   1      
 117   1      //SR: wait tranfer over
C51 COMPILER V9.53.0.0   MAIN                                                              10/27/2016 11:00:08 PAGE 3   

 118   1      P1 = 0x54;
 119   1      P2 = 0x00;
 120   1      while(TIP);
 121   1      P2 = 0xfc;      // flag
 122   1      
 123   1      while(1);
 124   1      }
 125          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    191    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
