C51 COMPILER V9.53.0.0   ML7266                                                            06/17/2017 15:19:19 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE ML7266
OBJECT MODULE PLACED IN ML7266.OBJ
COMPILER INVOKED BY: D:\ProgramFile\Keil_v5\C51\BIN\C51.EXE ML7266.c LARGE ROM(COMPACT) OPTIMIZE(8,SPEED) DEBUG OBJECTEX
                    -TEND TABS(2)

line level    source

   1          #include "ML7266.h"
   2          
   3          static unsigned char callback_length;
   4          static unsigned char callback_PC;
   5          static unsigned char callback_payload;
   6          
   7          void ML_TX(unsigned char *payload){
   8   1        do{
   9   2        //unsigned char appDataReq[] = {0x0F,0x40,SrcAdrMode,DstAdrMode,macPANId,DevshortAddr,0x05,0x00,0x00,0x00
             -,0x00,0x00,0x01,0x01};
  10   2          unsigned char len=payload[0]+10+3;
  11   2          int j; 
  12   2          SCEN=0;
  13   2          send_char(0x02);
  14   2          //cmd length
  15   2          send_char(len);
  16   2          send_char(0x40);
  17   2          send_char(0x00);
  18   2          send_char(0x02);
  19   2          send_char(0xAD);                             
  20   2          send_char(0xDE);
  21   2          send_char(0xAA);
  22   2          send_char(0xAA);
  23   2          //msdulength
  24   2          send_char((payload[0]+3));
  25   2          //data
  26   2          send_char(0x88);
  27   2          send_char(0x88);
  28   2          send_char(0x88);
  29   2          for(j=1;j<=payload[0];j++)
  30   2          {
  31   3            send_char(payload[j]);
  32   3          }
  33   2          //send_char(0x99);
  34   2          //tail
  35   2          send_char(0x01);
  36   2          send_char(0x01);
  37   2          SCEN=1;wait(1,2000);
  38   2          if(SINTN==0)
  39   2          {
  40   3            SCEN=0;
  41   3            send_char(0x01);
  42   3            callback_length=send_char(0x00);
  43   3            callback_PC=send_char(0x00);
  44   3            send_char(0x00);
  45   3            callback_payload=send_char(0x00);
  46   3            SCEN=1;wait(1,500);
  47   3            //LCD_show(callback_PC);wait(1,10000);
  48   3            //LCD_show(callback_payload);wait(1,10000);
  49   3            callback_payload=0x00;
  50   3          }
  51   2        }while(callback_payload!=0x00);
  52   1      }
  53          
C51 COMPILER V9.53.0.0   ML7266                                                            06/17/2017 15:19:19 PAGE 2   

  54          void ML_Reset(){
  55   1        do{
  56   2        //MLME-RESET.request
  57   2        //unsigned char appCmd_1[] = {0x02,0x54,0x01};
  58   2          SCEN=0;
  59   2          send_char(0x02);
  60   2          send_char(0x02);
  61   2          send_char(0x54);
  62   2          send_char(0x01);
  63   2          SCEN=1;wait(1,500);
  64   2          if(SINTN==0)
  65   2          {
  66   3            SCEN=0;
  67   3            send_char(0x01);
  68   3            callback_length=send_char(0x00);
  69   3            callback_PC=send_char(0x00);
  70   3            callback_payload=send_char(0x00);
  71   3            SCEN=1;wait(1,500);
  72   3            //LCD_show(callback_PC);wait(1,10000);
  73   3            //LCD_show(callback_payload);wait(1,10000);
  74   3          }
  75   2        }while(callback_payload!=0x00);
  76   1      }
  77          
  78          void ML_SetExAdr(){
  79   1        do{
  80   2        //MLME-SET.request( aExtendedAddress )
  81   2        // unsigned char appCmd_2[] = {0x0A,0x5B,0x6F,macCoorExtAddr};  
  82   2          SCEN=0;
  83   2          send_char(0x02);
  84   2          send_char(0x0A);
  85   2          send_char(0x5B);
  86   2          send_char(0x6F);
  87   2          send_char(0xAA);
  88   2          send_char(0xAA);
  89   2          send_char(0xAA);
  90   2          send_char(0xAA);
  91   2          send_char(0xAA);
  92   2          send_char(0xAA);
  93   2          send_char(0xAA);
  94   2          send_char(0xAA);
  95   2          SCEN=1;wait(1,500);
  96   2          if(SINTN==0)
  97   2          {
  98   3            SCEN=0;
  99   3            send_char(0x01);
 100   3            callback_length=send_char(0x00);
 101   3            send_char(0x00);
 102   3            callback_payload=send_char(0x00);
 103   3            callback_PC=send_char(0x00);
 104   3            SCEN=1;wait(1,500);
 105   3            //LCD_show(callback_PC);wait(1,10000);
 106   3            //LCD_show(callback_payload);wait(1,10000);
 107   3          }
 108   2        }while(callback_payload!=0x00);
 109   1      }
 110          
 111          void ML_SetAssPmt(){
 112   1        do{
 113   2        //MLME-SET.request( macAssociationPermit )
 114   2        // unsigned char appCmd_3[] = {0x03,0x5B,0x41,0x01};  
 115   2          SCEN=0;
C51 COMPILER V9.53.0.0   ML7266                                                            06/17/2017 15:19:19 PAGE 3   

 116   2          send_char(0x02);
 117   2          send_char(0x03);
 118   2          send_char(0x5B);
 119   2          send_char(0x41);
 120   2          send_char(0x01);
 121   2          SCEN=1;wait(1,500);
 122   2          if(SINTN==0)
 123   2          {
 124   3            SCEN=0;
 125   3            send_char(0x01);
 126   3            callback_length=send_char(0x00);
 127   3            send_char(0x00);
 128   3            callback_payload=send_char(0x00);
 129   3            callback_PC=send_char(0x00);
 130   3            SCEN=1;wait(1,500);
 131   3            //LCD_show(callback_PC);wait(1,10000);
 132   3            //LCD_show(callback_payload);wait(1,10000);
 133   3          }
 134   2        }while(callback_payload!=0x00); 
 135   1      }
 136          
 137          void ML_SetShoAdr(){
 138   1        do{
 139   2        //MLME-SET.request( macShortAddress )
 140   2        // unsigned char appCmd_4[] = {0x04,0x5B,0x53,macCoorShortAddr};
 141   2          SCEN=0;
 142   2          send_char(0x02);
 143   2          send_char(0x04);
 144   2          send_char(0x5B);
 145   2          send_char(0x53);
 146   2          send_char(0xEF);
 147   2          send_char(0xBE);
 148   2          SCEN=1;wait(1,500);
 149   2          if(SINTN==0)
 150   2          {
 151   3            SCEN=0;
 152   3            send_char(0x01);
 153   3            callback_length=send_char(0x00);
 154   3            send_char(0x00);
 155   3            callback_payload=send_char(0x00);
 156   3            callback_PC=send_char(0x00);
 157   3            SCEN=1;wait(1,500);
 158   3            //LCD_show(callback_PC);wait(1,10000);
 159   3            //LCD_show(callback_payload);wait(1,10000);
 160   3          }
 161   2        }while(callback_payload!=0x00); 
 162   1      }
 163          
 164          void ML_SetPanID(){
 165   1        do{
 166   2        //MLME-SET.request( macPANId )
 167   2        // unsigned char appCmd_5[] = {0x04,0x5B,0x50,macPADId};
 168   2          SCEN=0;
 169   2          send_char(0x02);
 170   2          send_char(0x04);
 171   2          send_char(0x5B);
 172   2          send_char(0x50);
 173   2          send_char(0xAD);
 174   2          send_char(0xDE);
 175   2          SCEN=1;wait(1,500);
 176   2          if(SINTN==0)
 177   2          {
C51 COMPILER V9.53.0.0   ML7266                                                            06/17/2017 15:19:19 PAGE 4   

 178   3            SCEN=0;
 179   3            send_char(0x01);
 180   3            callback_length=send_char(0x00);
 181   3            send_char(0x00);
 182   3            callback_payload=send_char(0x00);
 183   3            callback_PC=send_char(0x00);
 184   3            SCEN=1;wait(1,500);
 185   3            //LCD_show(callback_PC);wait(1,10000);
 186   3            //LCD_show(callback_payload);wait(1,10000);
 187   3          }
 188   2        }while(callback_payload!=0x00); 
 189   1      }
 190          
 191          void ML_SetRxOn(){
 192   1        do{
 193   2        //MLME-SET.request( macRxOnWhenIdle = TRUE )
 194   2        // unsigned char appCmd_6[] = {0x03,0x5B,0x52,0x01};
 195   2          SCEN=0;
 196   2          send_char(0x02);
 197   2          send_char(0x03);
 198   2          send_char(0x5B);
 199   2          send_char(0x52);
 200   2          send_char(0x01);
 201   2          SCEN=1;wait(1,500);
 202   2          if(SINTN==0)
 203   2          {
 204   3            SCEN=0;
 205   3            send_char(0x01);
 206   3            callback_length=send_char(0x00);
 207   3            send_char(0x00);
 208   3            callback_payload=send_char(0x00);
 209   3            callback_PC=send_char(0x00);
 210   3            SCEN=1;wait(1,500);
 211   3            //LCD_show(callback_PC);wait(1,10000);
 212   3            //LCD_show(callback_payload);wait(1,10000);
 213   3          }
 214   2        }while(callback_payload!=0x00); 
 215   1      }
 216          
 217          void ML_SetPowMode(){
 218   1        do{
 219   2        //MLME-SET.request( Powersavemode )
 220   2        // unsigned char appCmd_7[] = {0x06,0x5D,macPANId,Char_Channel,0xFF01};
 221   2          SCEN=0;
 222   2          send_char(0x02);
 223   2          send_char(0x03);
 224   2          send_char(0x5B);
 225   2          send_char(0x80);
 226   2          send_char(0x00);
 227   2          SCEN=1;wait(1,500);
 228   2          if(SINTN==0)
 229   2          {
 230   3            SCEN=0;
 231   3            send_char(0x01);
 232   3            callback_length=send_char(0x00);
 233   3            send_char(0x00);
 234   3            callback_payload=send_char(0x00);
 235   3            callback_PC=send_char(0x00);
 236   3            SCEN=1;wait(1,500);
 237   3            //LCD_show(callback_PC);wait(1,10000);
 238   3            //LCD_show(callback_payload);wait(1,10000);
 239   3          }
C51 COMPILER V9.53.0.0   ML7266                                                            06/17/2017 15:19:19 PAGE 5   

 240   2        }while(callback_payload!=0x00); 
 241   1      }
 242          
 243          void ML_Start(){
 244   1        do{
 245   2        //MLME-START.request( non-beacon )
 246   2        // unsigned char appCmd_7[] = {0x06,0x5D,macPANId,Char_Channel,0xFF01};
 247   2          SCEN=0;
 248   2          send_char(0x02);
 249   2          send_char(0x06);
 250   2          send_char(0x5D);
 251   2          send_char(0xAD);
 252   2          send_char(0xDE);
 253   2          send_char(0x1A);
 254   2          send_char(0xFF);
 255   2          send_char(0x01);
 256   2          SCEN=1;wait(1,500);
 257   2          if(SINTN==0)
 258   2          {
 259   3            SCEN=0;
 260   3            send_char(0x01);
 261   3            callback_length=send_char(0x00);
 262   3            callback_PC=send_char(0x00);
 263   3            callback_payload=send_char(0x00);
 264   3            SCEN=1;wait(1,500);
 265   3            //LCD_show(callback_PC);wait(1,10000);
 266   3            //LCD_show(callback_payload);wait(1,10000);
 267   3          }
 268   2        }while(callback_payload!=0x00); 
 269   1      }
 270          void ML_TX_init(){
 271   1        ML_Reset();
 272   1                LCD_show(0xBBB0);
 273   1                DelayMS(100);
 274   1        ML_SetExAdr();
 275   1                LCD_show(0xBBB1);
 276   1                DelayMS(100); 
 277   1        ML_SetAssPmt();
 278   1                LCD_show(0xBBB2);
 279   1                DelayMS(100); 
 280   1        ML_SetShoAdr();
 281   1                LCD_show(0xBBB3);
 282   1                DelayMS(100); 
 283   1        ML_SetPanID();
 284   1                LCD_show(0xBBB4);
 285   1                DelayMS(100); 
 286   1        ML_SetRxOn();
 287   1                LCD_show(0xBBB5);
 288   1                DelayMS(100); 
 289   1        ML_SetPowMode();
 290   1                LCD_show(0xBBB6);
 291   1                DelayMS(100); 
 292   1        ML_Start();
 293   1                LCD_show(0xBBB7);
 294   1                DelayMS(100); 
 295   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1303    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      3       6
C51 COMPILER V9.53.0.0   ML7266                                                            06/17/2017 15:19:19 PAGE 6   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
