C51 COMPILER V9.00   KXTJ9                                                                 11/10/2017 22:21:30 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE KXTJ9
OBJECT MODULE PLACED IN KXTJ9.OBJ
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE KXTJ9.c LARGE ROM(COMPACT) DEBUG OBJECTEXTEND

line level    source

   1          #include "KXTJ9.h"
   2          #include "I2C.h"
   3          #include "LCD.h"
   4          
   5          //uint KXTJ9_SLAVE_ADDR = 0x0F;
   6          
   7          void KXTJ9_prep(){
   8   1              I2C_rst();
   9   1              I2C_initial();
  10   1              //KXTJ9_ADDR = 0;
  11   1      
  12   1      }
  13          
  14          void KXTJ9_Init(){
  15   1              
  16   1              uchar cmd[2];
  17   1              
  18   1              KXTJ9_prep();
  19   1              
  20   1              cmd[0] = 0x80;
  21   1              I2C_w(KXTJ9_SLAVE_ADDR, KXTJ9_CTRL_REG2, cmd, 1);       // ctrl-reg2 1000-0000
  22   1        //DelayMS(75);
  23   1              do{     
  24   2                      I2C_r(KXTJ9_SLAVE_ADDR, KXTJ9_CTRL_REG2, cmd, 1);
  25   2                      //DelayMS(50);
  26   2              }while(cmd[0]&0x80) ;                                                             //??
  27   1              
  28   1      
  29   1              //Initialize CTRL_REG1                                                            //  ctrl-reg1 0000-0000
  30   1              cmd[0] = 0x00;
  31   1              I2C_w(KXTJ9_SLAVE_ADDR, KXTJ9_CTRL_REG1, cmd, 1);
  32   1                      
  33   1              //Initialize CTRL_REG2                                                            //  ctrl-reg2 0000-0000
  34   1              cmd[0] = 0x00;
  35   1              I2C_w(KXTJ9_SLAVE_ADDR, KXTJ9_CTRL_REG2, cmd, 1);
  36   1      
  37   1              //Initialize INT_CTRL1 and INT_CTRL2                              //   int-ctrl1,2 0001-0000,0011-1111
  38   1              cmd[0]=0x10; cmd[1] = 0x3f;
  39   1              I2C_w(KXTJ9_SLAVE_ADDR, KXTJ9_INT_CTRL_REG1, cmd, 2);
  40   1              
  41   1              /*
  42   1              do{     
  43   1                      I2C_r(KXTJ9_SLAVE_ADDR, KXTJ9_CTRL_REG1, cmd, 2);
  44   1                      DelayMS(25);
  45   1              }while((cmd[0]&0x80)&(cmd[1]&0x3f)) ;
  46   1                      */
  47   1                      
  48   1              //cmd[0] = 0x3f;
  49   1              //I2C_w(KXTJ9_SLAVE_ADDR, KXTJ9_INT_CTRL_REG2, cmd, 1);
  50   1      }
  51          
  52          void KXTJ9_Set_Resolution(uint high){
  53   1              
  54   1              uchar cmd;
  55   1              
C51 COMPILER V9.00   KXTJ9                                                                 11/10/2017 22:21:30 PAGE 2   

  56   1              KXTJ9_prep();
  57   1               
  58   1              //Load CTRL_REG1 to cmd                                                                   
  59   1              I2C_r(KXTJ9_SLAVE_ADDR, KXTJ9_CTRL_REG1, &cmd, 1);
  60   1      
  61   1              if(cmd & 0x80){                 //check whether PC1==1
  62   2                      cmd &= (~0x80);         //Set PC1 = 0                                     //cmd = 0xxx-xxxx
  63   2                      I2C_w(KXTJ9_SLAVE_ADDR, KXTJ9_CTRL_REG1, &cmd, 1);
  64   2              }
  65   1              
  66   1              if(high)
  67   1                      cmd |= 0x40;
  68   1              else
  69   1                      cmd &= (~0x40);
  70   1      
  71   1              I2C_w(KXTJ9_SLAVE_ADDR, KXTJ9_CTRL_REG1, &cmd, 1);
  72   1      
  73   1      }
  74          
  75          
  76          void KXTJ9_Set_Range(uint range){
  77   1      
  78   1              uchar cmd;
  79   1              
  80   1              //Load CTRL_REG1 to cmd
  81   1              I2C_r(KXTJ9_SLAVE_ADDR, KXTJ9_CTRL_REG1, &cmd, 1);
  82   1      
  83   1              if(cmd & 0x80){                 //if PC1==1, Set PC1 = 0
  84   2                      cmd &= (~0x80);         
  85   2                      I2C_w(KXTJ9_SLAVE_ADDR, KXTJ9_CTRL_REG1, &cmd, 1);
  86   2              }
  87   1      
  88   1              cmd &= 0xE7;    //0x11100111
  89   1              if(range==4)
  90   1                      cmd |= 0x08;
  91   1              else if(range == 8)
  92   1                      cmd |= 0x10;
  93   1      
  94   1      
  95   1              I2C_w(KXTJ9_SLAVE_ADDR, KXTJ9_CTRL_REG1, &cmd, 1);
  96   1      
  97   1      }  
  98          void KXTJ9_Get_Acceleration(int* a_x,int* a_y, int* a_z){
  99   1              
 100   1              uchar cmd;
 101   1              uchar data_out[2];
 102   1              int tmp;
 103   1      
 104   1              //Load CTRL_REG1 to cmd
 105   1              I2C_r(KXTJ9_SLAVE_ADDR, KXTJ9_CTRL_REG1, &cmd, 1);
 106   1      
 107   1      
 108   1              if((cmd & 0x80) == 0){                  //if PC1==0; Set PC1 = 1
 109   2                      cmd |= 0x80;            
 110   2                      I2C_w(KXTJ9_SLAVE_ADDR, KXTJ9_CTRL_REG1, &cmd, 1);
 111   2              }
 112   1      
 113   1              
 114   1              //read acceleration of x-axis
 115   1              I2C_r(KXTJ9_SLAVE_ADDR, 0x06, data_out, 2);
 116   1              tmp=(data_out[1] << 4) | (data_out[0] >> 4)     ;
 117   1              tmp=(tmp<2048)? (int)((double)tmp/1.024) : (int)((double)tmp/1.024-4000) ;
C51 COMPILER V9.00   KXTJ9                                                                 11/10/2017 22:21:30 PAGE 3   

 118   1              *a_x = tmp;
 119   1              
 120   1              //read acceleration of y-axis
 121   1              I2C_r(KXTJ9_SLAVE_ADDR, 0x08, data_out, 2);
 122   1              tmp=(data_out[1] << 4) | (data_out[0] >> 4)     ;
 123   1              tmp=(tmp<2048)? (int)((double)tmp/1.024) : (int)((double)tmp/1.024-4000) ;
 124   1              *a_y = tmp;
 125   1      
 126   1              //read acceleration of z-axis
 127   1              I2C_r(KXTJ9_SLAVE_ADDR, 0x0A, data_out, 2);
 128   1              tmp=(data_out[1] << 4) | (data_out[0] >> 4)     ;
 129   1              tmp=(tmp<2048)? (int)((double)tmp/1.024) : (int)((double)tmp/1.024-4000) ;
 130   1              *a_z = tmp;
 131   1      
 132   1      }       


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    845    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      22
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
