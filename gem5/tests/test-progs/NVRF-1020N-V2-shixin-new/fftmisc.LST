C51 COMPILER V9.00   FFTMISC                                                               11/10/2017 22:21:30 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE FFTMISC
OBJECT MODULE PLACED IN fftmisc.OBJ
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE fftmisc.c LARGE ROM(COMPACT) DEBUG OBJECTEXTEND

line level    source

   1          /*============================================================================
   2          
   3              fftmisc.c  -  Don Cross <dcross@intersrv.com>
   4          
   5              http://www.intersrv.com/~dcross/fft.html
   6          
   7              Helper routines for Fast Fourier Transform implementation.
   8              Contains common code for fft_float() and fft_double().
   9          
  10              See also:
  11                  fourierf.c
  12                  fourierd.c
  13                  ..\include\fourier.h
  14          
  15              Revision history:
  16          
  17          1998 September 19 [Don Cross]
  18              Improved the efficiency of IsPowerOfTwo().
  19              Updated coding standards.
  20          
  21          ============================================================================*/
  22          
  23          #include <stdlib.h>
  24          #include <stdio.h>
  25          
  26          #include "fourier.h"
  27          
  28          #define TRUE  1
  29          #define FALSE 0
  30          
  31          #define BITS_PER_WORD   (sizeof(unsigned) * 8)
  32          
  33          
  34          int IsPowerOfTwo ( unsigned x )
  35          {
  36   1          if ( x < 2 )
  37   1              return FALSE;
  38   1      
  39   1          if ( x & (x-1) )        // Thanks to 'byang' for this cute trick!
  40   1              return FALSE;
  41   1      
  42   1          return TRUE;
  43   1      }
  44          
  45          
  46          unsigned NumberOfBitsNeeded ( unsigned PowerOfTwo )
  47          {
  48   1          unsigned i;
  49   1      
  50   1          if ( PowerOfTwo < 2 )
  51   1          {
  52   2          //    fprintf (
  53   2          //        stderr,
  54   2           //       ">>> Error in fftmisc.c: argument %d to NumberOfBitsNeeded is too small.\n",
  55   2           //       PowerOfTwo );
C51 COMPILER V9.00   FFTMISC                                                               11/10/2017 22:21:30 PAGE 2   

  56   2      
  57   2      //        exit(1);
  58   2          }
  59   1      
  60   1          for ( i=0; ; i++ )
  61   1          {
  62   2              if ( PowerOfTwo & (1 << i) )
  63   2                  return i;
  64   2          }
  65   1      }
  66          
  67          
  68          
  69          unsigned ReverseBits ( unsigned index, unsigned NumBits )
  70          {
  71   1          unsigned i, rev;
  72   1      
  73   1          for ( i=rev=0; i < NumBits; i++ )
  74   1          {
  75   2              rev = (rev << 1) | (index & 1);
  76   2              index >>= 1;
  77   2          }
  78   1      
  79   1          return rev;
  80   1      }
  81          
  82          
  83          double Index_to_frequency ( unsigned NumSamples, unsigned Index )
  84          {
  85   1          if ( Index >= NumSamples )
  86   1              return 0.0;
  87   1          else if ( Index <= NumSamples/2 )
  88   1              return (double)Index / (double)NumSamples;
  89   1      
  90   1          return -(double)(NumSamples-Index) / (double)NumSamples;
  91   1      }
  92          
  93          
  94          /*--- end of file fftmisc.c---*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    328    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      10
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
